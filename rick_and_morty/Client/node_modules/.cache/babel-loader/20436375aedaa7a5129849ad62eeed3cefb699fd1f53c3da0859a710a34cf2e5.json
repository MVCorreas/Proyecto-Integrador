{"ast":null,"code":"import React from 'react';\n\n//Creamos las action types\nexport const ADD_FAV = 'ADD_FAV';\nexport const REMOVE_FAV = 'REMOVE_FAV';\nexport const GET_CHARACTER_DETAIL = \"GET_CHARACTER_DETAIL\";\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\nexport const FILTER = \"FILTER\";\nexport const ORDER = \"ORDER\";\n\n//creamos las actions\n// export const addFav = (character) => {\n//   return {\n//     type: ADD_FAV,\n//     payload: character\n//   }\n// };\n\nexport const addFav = character => {\n  const endpoint = 'http://localhost:3001/rickandmorty/fav';\n  return dispatch => {\n    axios.post(endpoint, character).then(({\n      data\n    }) => {\n      return dispatch({\n        type: 'ADD_FAV',\n        payload: data\n      });\n    });\n  };\n};\n\n// export const removeFav = (id) => {\n//     return {\n//         type: REMOVE_FAV,\n//         payload: id\n//     }\n// };\n\nexport const removeFav = id => {\n  const endpoint = 'http://localhost:3001/rickandmorty/fav/' + id;\n  return dispatch => {\n    axios.delete(endpoint).then(({\n      data\n    }) => {\n      return dispatch({\n        type: 'REMOVE_FAV',\n        payload: data\n      });\n    });\n  };\n};\nexport const getCharacterDetail = id => {\n  //Hacemos peticion asíncrona, retornamos una fx\n  return function (dispatch) {\n    fetch(`https://rickandmortyapi.com/api/character/${id}`).then(response => response.json()).then(data => dispatch({\n      type: GET_CHARACTER_DETAIL,\n      payload: data\n    }));\n  };\n};\nexport const cleanDetail = () => {\n  return {\n    type: CLEAN_DETAIL\n  };\n};\nexport const filterCards = gender => {\n  return {\n    type: FILTER,\n    payload: gender\n  };\n};\nexport const orderCards = order => {\n  return {\n    type: ORDER,\n    payload: order\n  };\n};","map":{"version":3,"names":["React","ADD_FAV","REMOVE_FAV","GET_CHARACTER_DETAIL","CLEAN_DETAIL","FILTER","ORDER","addFav","character","endpoint","dispatch","axios","post","then","data","type","payload","removeFav","id","delete","getCharacterDetail","fetch","response","json","cleanDetail","filterCards","gender","orderCards","order"],"sources":["/Users/vickycorreas/Desktop/Programación/HENRY/HENRY Students/Proyecto-Integrador/rick_and_morty/Client/src/redux/actions.js"],"sourcesContent":["import React from 'react'\n\n//Creamos las action types\nexport const ADD_FAV = 'ADD_FAV';\nexport const REMOVE_FAV = 'REMOVE_FAV';\nexport const GET_CHARACTER_DETAIL = \"GET_CHARACTER_DETAIL\";\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\nexport const FILTER = \"FILTER\";\nexport const ORDER = \"ORDER\";\n\n//creamos las actions\n// export const addFav = (character) => {\n//   return {\n//     type: ADD_FAV,\n//     payload: character\n//   }\n// };\n\nexport const addFav = (character) => {\n    const endpoint = 'http://localhost:3001/rickandmorty/fav';\n    return (dispatch) => {\n       axios.post(endpoint, character).then(({ data }) => {\n          return dispatch({\n             type: 'ADD_FAV',\n             payload: data,\n          });\n       });\n    };\n };\n \n// export const removeFav = (id) => {\n//     return {\n//         type: REMOVE_FAV,\n//         payload: id\n//     }\n// };\n\nexport const removeFav = (id) => {\n    const endpoint = 'http://localhost:3001/rickandmorty/fav/' + id;\n    return (dispatch) => {\n       axios.delete(endpoint).then(({ data }) => {\n          return dispatch({\n             type: 'REMOVE_FAV',\n             payload: data,\n       });\n       });\n    };\n };\n\nexport const getCharacterDetail = (id)=> { //Hacemos peticion asíncrona, retornamos una fx\n    return function (dispatch) {\n        fetch(`https://rickandmortyapi.com/api/character/${id}`)\n        .then((response) => response.json())\n        .then(data=>dispatch({type:GET_CHARACTER_DETAIL, payload:data}))\n    }\n};\n\nexport const cleanDetail = () => {\n    return {\n        type: CLEAN_DETAIL\n    }\n};\n\nexport const filterCards = (gender) => {\n    return {\n        type: FILTER,\n        payload: gender\n    }\n};\n\nexport const orderCards = (order) => {\n    return {\n        type: ORDER,\n        payload: order\n    }\n};\n \n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,OAAO,GAAG,SAAS;AAChC,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,YAAY,GAAG,cAAc;AAC1C,OAAO,MAAMC,MAAM,GAAG,QAAQ;AAC9B,OAAO,MAAMC,KAAK,GAAG,OAAO;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,MAAM,GAAIC,SAAS,IAAK;EACjC,MAAMC,QAAQ,GAAG,wCAAwC;EACzD,OAAQC,QAAQ,IAAK;IAClBC,KAAK,CAACC,IAAI,CAACH,QAAQ,EAAED,SAAS,CAAC,CAACK,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAK;MAChD,OAAOJ,QAAQ,CAAC;QACbK,IAAI,EAAE,SAAS;QACfC,OAAO,EAAEF;MACZ,CAAC,CAAC;IACL,CAAC,CAAC;EACL,CAAC;AACJ,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMG,SAAS,GAAIC,EAAE,IAAK;EAC7B,MAAMT,QAAQ,GAAG,yCAAyC,GAAGS,EAAE;EAC/D,OAAQR,QAAQ,IAAK;IAClBC,KAAK,CAACQ,MAAM,CAACV,QAAQ,CAAC,CAACI,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAK;MACvC,OAAOJ,QAAQ,CAAC;QACbK,IAAI,EAAE,YAAY;QAClBC,OAAO,EAAEF;MACf,CAAC,CAAC;IACF,CAAC,CAAC;EACL,CAAC;AACJ,CAAC;AAEF,OAAO,MAAMM,kBAAkB,GAAIF,EAAE,IAAI;EAAE;EACvC,OAAO,UAAUR,QAAQ,EAAE;IACvBW,KAAK,CAAE,6CAA4CH,EAAG,EAAC,CAAC,CACvDL,IAAI,CAAES,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCV,IAAI,CAACC,IAAI,IAAEJ,QAAQ,CAAC;MAACK,IAAI,EAACZ,oBAAoB;MAAEa,OAAO,EAACF;IAAI,CAAC,CAAC,CAAC;EACpE,CAAC;AACL,CAAC;AAED,OAAO,MAAMU,WAAW,GAAGA,CAAA,KAAM;EAC7B,OAAO;IACHT,IAAI,EAAEX;EACV,CAAC;AACL,CAAC;AAED,OAAO,MAAMqB,WAAW,GAAIC,MAAM,IAAK;EACnC,OAAO;IACHX,IAAI,EAAEV,MAAM;IACZW,OAAO,EAAEU;EACb,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EACjC,OAAO;IACHb,IAAI,EAAET,KAAK;IACXU,OAAO,EAAEY;EACb,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}