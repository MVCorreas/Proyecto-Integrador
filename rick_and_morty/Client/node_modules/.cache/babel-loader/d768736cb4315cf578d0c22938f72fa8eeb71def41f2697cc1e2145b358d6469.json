{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./actions-types.js\";\nconst initialState = {\n  myFavorites: [],\n  allFavorites: []\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FAV:\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allFavorites: action.payload\n      };\n\n    //! Antes de Express \n    // case ADD_FAV: \n    //   // const addFav = [...state.allFavorites, action.payload]; \n    //   return { \n    //     ...state, \n    //     myFavorites: [...state.allFavorites, action.payload], \n    //     allFavorites: [...state.allFavorites, action.payload], \n    //   }; \n\n    //! Con Express \n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allFavorites: action.payload\n      };\n\n    //! Antes de Express \n    // case REMOVE_FAV: \n    //   // const removeFav = state.myFavorites.filter((fav) => fav.id !== action.payload); \n    //   return { \n    //     ...state, \n    //     myFavorites: state.myFavorites.filter((fav) => fav.id !== Number(action.payload)), \n    //     allFavorites: state.myFavorites.filter((fav) => fav.id !== Number(action.payload)), \n    //   }; \n\n    case FILTER:\n      return {\n        ...state,\n        myFavorites: action.payload === \"All Favorites\" ? [...state.allFavorites] : state.allFavorites.filter(character => character.gender === action.payload)\n      };\n    case ORDER:\n      let ordered = [];\n      if (action.payload === \"Ascendente\") {\n        ordered = state.myFavorites.sort((a, b) => a.id > b.id ? 1 : -1);\n      } else {\n        ordered = state.myFavorites.sort((a, b) => b.id > a.id ? 1 : -1);\n      }\n      return {\n        ...state,\n        myFavorites: [...ordered]\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER","ORDER","initialState","myFavorites","allFavorites","rootReducer","state","action","type","payload","filter","character","gender","ordered","sort","a","b","id"],"sources":["/Users/vickycorreas/Desktop/Programación/HENRY/HENRY Students/Proyecto-Integrador/rick_and_morty/Client/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAV, REMOVE_FAV, FILTER, ORDER } from \"./actions-types.js\"; \n  \n const initialState = { \n   myFavorites: [], \n   allFavorites: [], \n }; \n  \n const rootReducer = (state = initialState, action) => { \n   switch (action.type) { \n     case ADD_FAV: \n       return { \n         ...state, \n         myFavorites: action.payload, \n         allFavorites: action.payload, \n       }; \n  \n     //! Antes de Express \n     // case ADD_FAV: \n     //   // const addFav = [...state.allFavorites, action.payload]; \n     //   return { \n     //     ...state, \n     //     myFavorites: [...state.allFavorites, action.payload], \n     //     allFavorites: [...state.allFavorites, action.payload], \n     //   }; \n  \n     //! Con Express \n     case REMOVE_FAV: \n       return { \n         ...state, \n         myFavorites: action.payload, \n         allFavorites: action.payload, \n       }; \n  \n     //! Antes de Express \n     // case REMOVE_FAV: \n     //   // const removeFav = state.myFavorites.filter((fav) => fav.id !== action.payload); \n     //   return { \n     //     ...state, \n     //     myFavorites: state.myFavorites.filter((fav) => fav.id !== Number(action.payload)), \n     //     allFavorites: state.myFavorites.filter((fav) => fav.id !== Number(action.payload)), \n     //   }; \n  \n     case FILTER: \n       return { \n         ...state, \n         myFavorites: action.payload === \"All Favorites\" ? [...state.allFavorites] : state.allFavorites.filter((character) => character.gender === action.payload), \n       }; \n  \n     case ORDER: \n       let ordered = []; \n       if (action.payload === \"Ascendente\") { \n         ordered = state.myFavorites.sort((a, b) => (a.id > b.id ? 1 : -1)); \n       } else { \n         ordered = state.myFavorites.sort((a, b) => (b.id > a.id ? 1 : -1)); \n       } \n  \n       return { \n         ...state, \n         myFavorites: [...ordered], \n       }; \n     default: \n       return { ...state }; \n   } \n }; \n  \n export default rootReducer;"],"mappings":"AAAA,SAASA,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,QAAQ,oBAAoB;AAEtE,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKV,OAAO;MACV,OAAO;QACL,GAAGQ,KAAK;QACRH,WAAW,EAAEI,MAAM,CAACE,OAAO;QAC3BL,YAAY,EAAEG,MAAM,CAACE;MACvB,CAAC;;IAEH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA,KAAKV,UAAU;MACb,OAAO;QACL,GAAGO,KAAK;QACRH,WAAW,EAAEI,MAAM,CAACE,OAAO;QAC3BL,YAAY,EAAEG,MAAM,CAACE;MACvB,CAAC;;IAEH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,KAAKT,MAAM;MACT,OAAO;QACL,GAAGM,KAAK;QACRH,WAAW,EAAEI,MAAM,CAACE,OAAO,KAAK,eAAe,GAAG,CAAC,GAAGH,KAAK,CAACF,YAAY,CAAC,GAAGE,KAAK,CAACF,YAAY,CAACM,MAAM,CAAEC,SAAS,IAAKA,SAAS,CAACC,MAAM,KAAKL,MAAM,CAACE,OAAO;MAC1J,CAAC;IAEH,KAAKR,KAAK;MACR,IAAIY,OAAO,GAAG,EAAE;MAChB,IAAIN,MAAM,CAACE,OAAO,KAAK,YAAY,EAAE;QACnCI,OAAO,GAAGP,KAAK,CAACH,WAAW,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;MACpE,CAAC,MAAM;QACLJ,OAAO,GAAGP,KAAK,CAACH,WAAW,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMA,CAAC,CAACC,EAAE,GAAGF,CAAC,CAACE,EAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;MACpE;MAEA,OAAO;QACL,GAAGX,KAAK;QACRH,WAAW,EAAE,CAAC,GAAGU,OAAO;MAC1B,CAAC;IACH;MACE,OAAO;QAAE,GAAGP;MAAM,CAAC;EACvB;AACF,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}