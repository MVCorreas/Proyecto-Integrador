{"ast":null,"code":"var _jsxFileName = \"/Users/vickycorreas/Desktop/Programacio\\u0301n/HENRY/HENRY Students/Proyecto-Integrador/rick_and_morty/src/Views/Detail/Detail.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCharacterDetail, cleanDetail } from '../../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Detail = () => {\n  _s();\n  const {\n    id\n  } = useParams(); //nos da el id del character\n  //const [character, setCharacter] = useState({});\n  const character = useSelector(state => state.characterDetail); //ahora el estado no es local, sino global. Empleo el useEffect para hacer un fecth a una action que hace peticion a la API   const dispatch = useDispatch()\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //    axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {\n  //       if (data.name) {\n  //          setCharacter(data);\n  //       } else {\n  //          window.alert('No hay personajes con ese ID');\n  //       }\n  //    });\n  //    return setCharacter({});\n  // }, [id]);\n\n  useEffect(() => {\n    dispatch(getCharacterDetail(id));\n    return () => {\n      dispatch(cleanDetail());\n    };\n  }, [id]);\n  const characterDetail = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", character.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", character.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Species: \", character.species]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gender: \", character.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Origin: \", character.origin && character.origin.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.image,\n        alt: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Detail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), character.name ? characterDetail() : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay informaci\\xF3n disponible para ese personaje\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n};\n_s(Detail, \"spU3I6v8zLgpmcCzin4xm3+5TU4=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n_c = Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useParams","useState","useEffect","useDispatch","useSelector","getCharacterDetail","cleanDetail","jsxDEV","_jsxDEV","Detail","_s","id","character","state","characterDetail","dispatch","children","name","fileName","_jsxFileName","lineNumber","columnNumber","status","species","gender","origin","src","image","alt","_c","$RefreshReg$"],"sources":["/Users/vickycorreas/Desktop/Programación/HENRY/HENRY Students/Proyecto-Integrador/rick_and_morty/src/Views/Detail/Detail.jsx"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCharacterDetail, cleanDetail } from '../../redux/actions';\n\n\n\nexport const Detail = () => {\n   const {id} = useParams(); //nos da el id del character\n   //const [character, setCharacter] = useState({});\n   const character = useSelector(state => state.characterDetail) //ahora el estado no es local, sino global. Empleo el useEffect para hacer un fecth a una action que hace peticion a la API   const dispatch = useDispatch()\n   const dispatch = useDispatch();\n   \n   // useEffect(() => {\n   //    axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {\n   //       if (data.name) {\n   //          setCharacter(data);\n   //       } else {\n   //          window.alert('No hay personajes con ese ID');\n   //       }\n   //    });\n   //    return setCharacter({});\n   // }, [id]);\n\n   useEffect(() => {\n      dispatch(getCharacterDetail(id))\n\n      return () => {\n        dispatch(cleanDetail())\n      }\n   }, [id]);\n\n   const characterDetail = () => {\n      return (\n         <div>\n           <h2>{character.name}</h2>\n           <p>ID: {character.id}</p>\n           <p>Status: {character.status}</p>\n           <p>Species: {character.species}</p>\n           <p>Gender: {character.gender}</p>\n           <p>Origin: {character.origin && character.origin.name}</p>\n           <img src={character.image} alt={character.name} />\n         </div>\n       )\n       \n   };\n\n   return (\n      <div>\n      <h2>Detail</h2>\n      {character.name ? (\n        characterDetail() \n      ) : (\n        <p>No hay información disponible para ese personaje</p>\n      )}\n    </div>\n    );\n  };\n  \n  \n  \n  \n  \n  \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}