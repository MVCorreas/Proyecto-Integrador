{"ast":null,"code":"var _jsxFileName = \"/Users/vickycorreas/Desktop/Programacio\\u0301n/HENRY/HENRY Students/Proyecto-Integrador/rick_and_morty/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Cards from \"./components/Cards/Cards.jsx\";\nimport Nav from \"./components/Nav/Nav.jsx\";\nimport { Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport { About } from \"./Views/About/About\";\nimport { Detail } from \"./Views/Detail/Detail\";\nimport { Form } from \"./components/Form/Form.jsx\";\nimport Favorites from \"./components/Favorites/Favorites\";\nimport NavBar from './components/Nav/Nav';\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const location = useLocation();\n  const [access, setAccess] = useState(false);\n  const email = \"mvcorreas@gmail.com\";\n  const password = \"mv1220\";\n  const navigate = useNavigate();\n\n  // Función para obtener todos los personajes\n  const onSearch = id => {\n    if (isNaN(id)) {\n      alert(\"Por favor, ingresa un número válido como ID.\");\n      return;\n    }\n    axios(`https://rickandmortyapi.com/api/character/${id}`).then(({\n      data\n    }) => {\n      if (data.name) {\n        const characterExists = characters.some(character => character.id === data.id);\n        if (characterExists) {\n          alert(\"Este personaje ya se encuentra en la lista.\");\n        } else {\n          setCharacters(characters => [...characters, data]);\n        }\n      } else {\n        alert(`¡No hay personajes con el ID proporcionado!`);\n      }\n    }).catch(error => {\n      alert(`Ocurrió un error al obtener los datos de la API. Por favor, intenta nuevamente más tarde.`);\n      console.error(error);\n    });\n  };\n\n  // Función para obtener un personaje aleatorio\n  const randomCharacter = () => {\n    const randomId = Math.floor(Math.random() * 826) + 1;\n    axios(`https://rickandmortyapi.com/api/character/${randomId}`).then(({\n      data\n    }) => {\n      if (data.name) {\n        const characterExists = characters.includes(data);\n        if (characterExists) {\n          alert(\"Este personaje ya se encuentra en la lista.\");\n        } else {\n          setCharacters(characters => [...characters, data]);\n        }\n      } else {\n        alert(`¡No hay personajes con el ID proporcionado!`);\n      }\n    }).catch(error => {\n      alert(`Ocurrió un error al obtener los datos de la API. Por favor, intenta nuevamente más tarde.`);\n      console.error(error);\n    });\n  };\n\n  // Función para eliminar un personaje\n  const onClose = id => {\n    const charactersFiltered = characters.filter(character => character.id !== parseInt(id));\n    setCharacters(charactersFiltered);\n  };\n\n  // Función para validar acceso Login\n\n  const login = userData => {\n    const inputEmail = userData.email.trim();\n    const inputPassword = userData.password.trim();\n    if (inputEmail === email && inputPassword === password) {\n      setAccess(true);\n      alert(\"Login Exitoso\");\n      navigate('/home');\n    } else if (inputEmail !== email || inputPassword !== password) {\n      alert(\"Los datos ingresados son inválidos\");\n    }\n  };\n  useEffect(() => {\n    !access && navigate('/');\n  }, [access]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: location.pathname === \"/\" || location.pathname === \"/home\" ? \"App\" : \"\",\n    children: [location.pathname !== \"/\" && /*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch,\n      onRandom: randomCharacter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n            onSearch: onSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 7\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Cards, {\n            characters: characters,\n            onClose: onClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 7\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:id\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/favorites\",\n        element: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QIChLH8D1imZU8Ofj0Uk/rJ+Oyw=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Cards","Nav","Routes","Route","useLocation","useNavigate","About","Detail","Form","Favorites","NavBar","SearchBar","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","location","access","setAccess","email","password","navigate","onSearch","id","isNaN","alert","then","data","name","characterExists","some","character","catch","error","console","randomCharacter","randomId","Math","floor","random","includes","onClose","charactersFiltered","filter","parseInt","login","userData","inputEmail","trim","inputPassword","className","pathname","children","onRandom","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/vickycorreas/Desktop/Programación/HENRY/HENRY Students/Proyecto-Integrador/rick_and_morty/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Cards from \"./components/Cards/Cards.jsx\";\nimport Nav from \"./components/Nav/Nav.jsx\";\nimport {Routes, Route, useLocation, useNavigate} from 'react-router-dom';\nimport { About } from \"./Views/About/About\";\nimport { Detail } from \"./Views/Detail/Detail\";\nimport {Form} from \"./components/Form/Form.jsx\";\nimport Favorites  from \"./components/Favorites/Favorites\";\nimport NavBar from './components/Nav/Nav';\nimport SearchBar from \"./components/SearchBar/SearchBar\";\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n  const location = useLocation();\n  const [access, setAccess] = useState(false);\n  const email = \"mvcorreas@gmail.com\";\n  const password = \"mv1220\";\n  const navigate = useNavigate();\n\n  // Función para obtener todos los personajes\n  const onSearch = (id) => {\n    if (isNaN(id)) {\n      alert(\"Por favor, ingresa un número válido como ID.\");\n      return;\n    }\n\n    axios(`https://rickandmortyapi.com/api/character/${id}`)\n      .then(({ data }) => {\n        if (data.name) {\n          const characterExists = characters.some(\n            (character) => character.id === data.id\n          );\n\n          if (characterExists) {\n            alert(\"Este personaje ya se encuentra en la lista.\");\n          } else {\n            setCharacters((characters) => [...characters, data]);\n          }\n        } else {\n          alert(`¡No hay personajes con el ID proporcionado!`);\n        }\n      })\n      .catch((error) => {\n        alert(\n          `Ocurrió un error al obtener los datos de la API. Por favor, intenta nuevamente más tarde.`\n        );\n        console.error(error);\n      });\n  };\n\n  // Función para obtener un personaje aleatorio\n  const randomCharacter = () => {\n    const randomId = Math.floor(Math.random() * 826) + 1;\n\n    axios(`https://rickandmortyapi.com/api/character/${randomId}`)\n      .then(({ data }) => {\n        if (data.name) {\n          const characterExists = characters.includes(data);\n\n          if (characterExists) {\n            alert(\"Este personaje ya se encuentra en la lista.\");\n          } else {\n            setCharacters((characters) => [...characters, data]);\n          }\n        } else {\n          alert(`¡No hay personajes con el ID proporcionado!`);\n        }\n      })\n      .catch((error) => {\n        alert(\n          `Ocurrió un error al obtener los datos de la API. Por favor, intenta nuevamente más tarde.`\n        );\n        console.error(error);\n      });\n  };\n\n  // Función para eliminar un personaje\n  const onClose = (id) => {\n    const charactersFiltered = characters.filter(\n      (character) => character.id !== parseInt(id)\n    );\n    setCharacters(charactersFiltered);\n  };\n\n  // Función para validar acceso Login\n\n  const login = (userData) => {\n    const inputEmail = userData.email.trim();\n    const inputPassword = userData.password.trim();\n    if (inputEmail === email && inputPassword === password) {\n    setAccess(true);\n    alert(\"Login Exitoso\");\n    navigate('/home');\n    } else if (inputEmail !== email || inputPassword !== password) {\n      alert(\"Los datos ingresados son inválidos\");\n    }};\n\n  useEffect(() => {\n    !access && navigate('/');\n }, [access]);\n\n  return (\n    <div className={(location.pathname === \"/\" || location.pathname === \"/home\") ? \"App\" : \"\"}>\n      {location.pathname !== \"/\" && <Nav onSearch={onSearch} onRandom={randomCharacter} />}\n     <Routes>\n      <Route path='/' element={<Form login={login}/>} />\n      <Route path='/home' element={\n      <div>\n      <SearchBar onSearch={onSearch} /> {/* Componente SearchBar */}\n      <Cards characters={characters} onClose={onClose}/> {/* Componente Cards */}\n    </div> }/>\n      <Route path='/about' element={<About/>} />\n      <Route path='/detail/:id' element={<Detail/>} />\n      <Route path='/favorites' element={<Favorites/>} />\n     </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}