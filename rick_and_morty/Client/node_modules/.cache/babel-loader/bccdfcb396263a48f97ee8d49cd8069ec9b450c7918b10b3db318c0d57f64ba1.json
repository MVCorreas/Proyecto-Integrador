{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useDispatch } from 'react-redux';\n\n//Creamos las action types\nexport const ADD_FAV = 'ADD_FAV';\nexport const REMOVE_FAV = 'REMOVE_FAV';\nexport const GET_CHARACTER_DETAIL = \"GET_CHARACTER_DETAIL\";\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\nexport const FILTER = \"FILTER\";\nexport const ORDER = \"ORDER\";\n\n//creamos las actions\n// export const addFav = (character) => {\n//   return {\n//     type: ADD_FAV,\n//     payload: character\n//   }\n// };\n\n//ADD FAV CON PROMESAS\n// export const addFav = async (character) => {\n//     const endpoint = 'http://localhost:3001/rickandmorty/fav';\n//     return (dispatch) => {\n//        axios.post(endpoint, character).then(({ data }) => {\n//           return dispatch({\n//              type: ADD_FAV,\n//              payload: data,\n//           });\n//        });\n//     };\n//  };\n\n//ADD FAV CON ASYNC AWAIT\nexport const addFav = character => async dispatch => {\n  try {\n    const endpoint = 'http://localhost:3001/rickandmorty/fav';\n    const {\n      data\n    } = await axios.post(endpoint, character);\n    dispatch({\n      type: ADD_FAV,\n      payload: data\n    });\n  } catch (error) {\n    alert('Could not add the character selected');\n    console.error(error);\n  }\n};\n\n// export const removeFav = (id) => {\n//     return {\n//         type: REMOVE_FAV,\n//         payload: id\n//     }\n// };\n\n//REMOVE FAV CON PROMESAS\n// export const removeFav = (id) => {\n//     const endpoint = 'http://localhost:3001/rickandmorty/fav/' + id;\n//     return (dispatch) => {\n//        axios.delete(endpoint).then(({ data }) => {\n//           return dispatch({\n//              type: REMOVE_FAV,\n//              payload: data,\n//        });\n//        });\n//     };\n//  };\n\n//REMOVE FAV ASYNC AWAIT\nexport const removeFav = async id => {\n  _s();\n  const dispatch = useDispatch();\n  try {\n    const endpoint = 'http://localhost:3001/rickandmorty/fav/' + id;\n    const {\n      data\n    } = await axios.delete(endpoint);\n    dispatch({\n      type: REMOVE_FAV,\n      payload: data\n    });\n  } catch (error) {\n    alert('Could not remove the character selected');\n    console.error(error);\n  }\n};\n_s(removeFav, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\nexport const getCharacterDetail = id => {\n  //Hacemos peticion asíncrona, retornamos una fx\n  return function (dispatch) {\n    fetch(`https://rickandmortyapi.com/api/character/${id}`).then(response => response.json()).then(data => dispatch({\n      type: GET_CHARACTER_DETAIL,\n      payload: data\n    }));\n  };\n};\nexport const cleanDetail = () => {\n  return {\n    type: CLEAN_DETAIL\n  };\n};\nexport const filterCards = gender => {\n  return {\n    type: FILTER,\n    payload: gender\n  };\n};\nexport const orderCards = order => {\n  return {\n    type: ORDER,\n    payload: order\n  };\n};","map":{"version":3,"names":["axios","useDispatch","ADD_FAV","REMOVE_FAV","GET_CHARACTER_DETAIL","CLEAN_DETAIL","FILTER","ORDER","addFav","character","dispatch","endpoint","data","post","type","payload","error","alert","console","removeFav","id","_s","delete","getCharacterDetail","fetch","then","response","json","cleanDetail","filterCards","gender","orderCards","order"],"sources":["/Users/vickycorreas/Desktop/Programación/HENRY/HENRY Students/Proyecto-Integrador/rick_and_morty/Client/src/redux/actions.js"],"sourcesContent":["import axios from 'axios';\nimport { useDispatch } from 'react-redux';\n\n//Creamos las action types\nexport const ADD_FAV = 'ADD_FAV';\nexport const REMOVE_FAV = 'REMOVE_FAV';\nexport const GET_CHARACTER_DETAIL = \"GET_CHARACTER_DETAIL\";\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\nexport const FILTER = \"FILTER\";\nexport const ORDER = \"ORDER\";\n\n//creamos las actions\n// export const addFav = (character) => {\n//   return {\n//     type: ADD_FAV,\n//     payload: character\n//   }\n// };\n\n//ADD FAV CON PROMESAS\n// export const addFav = async (character) => {\n//     const endpoint = 'http://localhost:3001/rickandmorty/fav';\n//     return (dispatch) => {\n//        axios.post(endpoint, character).then(({ data }) => {\n//           return dispatch({\n//              type: ADD_FAV,\n//              payload: data,\n//           });\n//        });\n//     };\n//  };\n\n//ADD FAV CON ASYNC AWAIT\nexport const addFav = (character) => async (dispatch) => {\n    try {\n      const endpoint = 'http://localhost:3001/rickandmorty/fav';\n      const { data } = await axios.post(endpoint, character);\n  \n      dispatch({\n        type: ADD_FAV,\n        payload: data,\n      });\n    } catch (error) {\n      alert('Could not add the character selected');\n      console.error(error);\n    }\n  };\n  \n \n// export const removeFav = (id) => {\n//     return {\n//         type: REMOVE_FAV,\n//         payload: id\n//     }\n// };\n\n//REMOVE FAV CON PROMESAS\n// export const removeFav = (id) => {\n//     const endpoint = 'http://localhost:3001/rickandmorty/fav/' + id;\n//     return (dispatch) => {\n//        axios.delete(endpoint).then(({ data }) => {\n//           return dispatch({\n//              type: REMOVE_FAV,\n//              payload: data,\n//        });\n//        });\n//     };\n//  };\n\n//REMOVE FAV ASYNC AWAIT\nexport const removeFav = async (id) => {\n    const dispatch = useDispatch();\n    try {\n        const endpoint = 'http://localhost:3001/rickandmorty/fav/' + id;\n        const { data } = await axios.delete(endpoint);\n        dispatch({\n            type: REMOVE_FAV,\n            payload: data,\n      });\n    } catch (error) {\n        alert('Could not remove the character selected')\n        console.error(error);\n      }\n };\n \nexport const getCharacterDetail = (id)=> { //Hacemos peticion asíncrona, retornamos una fx\n    return function (dispatch) {\n        fetch(`https://rickandmortyapi.com/api/character/${id}`)\n        .then((response) => response.json())\n        .then(data=>dispatch({type:GET_CHARACTER_DETAIL, payload:data}))\n    }\n};\n\nexport const cleanDetail = () => {\n    return {\n        type: CLEAN_DETAIL\n    }\n};\n\nexport const filterCards = (gender) => {\n    return {\n        type: FILTER,\n        payload: gender\n    }\n};\n\nexport const orderCards = (order) => {\n    return {\n        type: ORDER,\n        payload: order\n    }\n};\n \n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;;AAEzC;AACA,OAAO,MAAMC,OAAO,GAAG,SAAS;AAChC,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,YAAY,GAAG,cAAc;AAC1C,OAAO,MAAMC,MAAM,GAAG,QAAQ;AAC9B,OAAO,MAAMC,KAAK,GAAG,OAAO;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,MAAMC,MAAM,GAAIC,SAAS,IAAK,MAAOC,QAAQ,IAAK;EACrD,IAAI;IACF,MAAMC,QAAQ,GAAG,wCAAwC;IACzD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAACF,QAAQ,EAAEF,SAAS,CAAC;IAEtDC,QAAQ,CAAC;MACPI,IAAI,EAAEZ,OAAO;MACba,OAAO,EAAEH;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,KAAK,CAAC,sCAAsC,CAAC;IAC7CC,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;EACtB;AACF,CAAC;;AAGH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,MAAMG,SAAS,GAAG,MAAOC,EAAE,IAAK;EAAAC,EAAA;EACnC,MAAMX,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,IAAI;IACA,MAAMU,QAAQ,GAAG,yCAAyC,GAAGS,EAAE;IAC/D,MAAM;MAAER;IAAK,CAAC,GAAG,MAAMZ,KAAK,CAACsB,MAAM,CAACX,QAAQ,CAAC;IAC7CD,QAAQ,CAAC;MACLI,IAAI,EAAEX,UAAU;MAChBY,OAAO,EAAEH;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,KAAK,CAAC,yCAAyC,CAAC;IAChDC,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;EACtB;AACL,CAAC;AAACK,EAAA,CAbUF,SAAS;EAAA,QACDlB,WAAW;AAAA;AAchC,OAAO,MAAMsB,kBAAkB,GAAIH,EAAE,IAAI;EAAE;EACvC,OAAO,UAAUV,QAAQ,EAAE;IACvBc,KAAK,CAAE,6CAA4CJ,EAAG,EAAC,CAAC,CACvDK,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAACb,IAAI,IAAEF,QAAQ,CAAC;MAACI,IAAI,EAACV,oBAAoB;MAAEW,OAAO,EAACH;IAAI,CAAC,CAAC,CAAC;EACpE,CAAC;AACL,CAAC;AAED,OAAO,MAAMgB,WAAW,GAAGA,CAAA,KAAM;EAC7B,OAAO;IACHd,IAAI,EAAET;EACV,CAAC;AACL,CAAC;AAED,OAAO,MAAMwB,WAAW,GAAIC,MAAM,IAAK;EACnC,OAAO;IACHhB,IAAI,EAAER,MAAM;IACZS,OAAO,EAAEe;EACb,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EACjC,OAAO;IACHlB,IAAI,EAAEP,KAAK;IACXQ,OAAO,EAAEiB;EACb,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}