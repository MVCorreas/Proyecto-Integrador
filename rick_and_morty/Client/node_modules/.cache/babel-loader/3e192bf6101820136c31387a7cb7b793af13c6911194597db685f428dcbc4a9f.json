{"ast":null,"code":"import axios from 'axios';\n\n//Creamos las action types\nexport const ADD_FAV = 'ADD_FAV';\nexport const REMOVE_FAV = 'REMOVE_FAV';\nexport const GET_CHARACTER_DETAIL = \"GET_CHARACTER_DETAIL\";\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\nexport const FILTER = \"FILTER\";\nexport const ORDER = \"ORDER\";\n\n//creamos las actions\n// export const addFav = (character) => {\n//   return {\n//     type: ADD_FAV,\n//     payload: character\n//   }\n// };\n\n//ADD FAV CON PROMESAS\n// export const addFav = async (character) => {\n//     const endpoint = 'http://localhost:3001/rickandmorty/fav';\n//     return (dispatch) => {\n//        axios.post(endpoint, character).then(({ data }) => {\n//           return dispatch({\n//              type: ADD_FAV,\n//              payload: data,\n//           });\n//        });\n//     };\n//  };\n\n//ADD FAV CON ASYNC AWAIT\nconst URL = \"http://localhost:3001/rickandmorty\";\n\n//! Con Express y funcion async/await\nexport const addFav = character => {\n  return async dispatch => {\n    const endpoint = `${URL}/fav`;\n    try {\n      const {\n        data\n      } = await axios.post(endpoint, character);\n      return dispatch({\n        type: ADD_FAV,\n        payload: data\n      });\n    } catch (error) {\n      alert(error);\n    }\n  };\n};\n\n// export const removeFav = (id) => {\n//     return {\n//         type: REMOVE_FAV,\n//         payload: id\n//     }\n// };\n\n//REMOVE FAV CON PROMESAS\n// export const removeFav = (id) => {\n//     const endpoint = 'http://localhost:3001/rickandmorty/fav/' + id;\n//     return (dispatch) => {\n//        axios.delete(endpoint).then(({ data }) => {\n//           return dispatch({\n//              type: REMOVE_FAV,\n//              payload: data,\n//        });\n//        });\n//     };\n//  };\n\n//REMOVE FAV ASYNC AWAIT\nexport const removeFav = id => async dispatch => {\n  try {\n    const endpoint = 'http://localhost:3001/rickandmorty/fav/' + id;\n    const {\n      data\n    } = await axios.delete(endpoint);\n    return dispatch({\n      type: REMOVE_FAV,\n      payload: data\n    });\n  } catch (error) {\n    alert('Could not remove the character selected');\n  }\n};\nexport const getCharacterDetail = id => {\n  //Hacemos peticion asíncrona, retornamos una fx\n  return function (dispatch) {\n    fetch(`https://rickandmortyapi.com/api/character/${id}`).then(response => response.json()).then(data => dispatch({\n      type: GET_CHARACTER_DETAIL,\n      payload: data\n    }));\n  };\n};\nexport const cleanDetail = () => {\n  return {\n    type: CLEAN_DETAIL\n  };\n};\nexport const filterCards = gender => {\n  return {\n    type: FILTER,\n    payload: gender\n  };\n};\nexport const orderCards = order => {\n  return {\n    type: ORDER,\n    payload: order\n  };\n};","map":{"version":3,"names":["axios","ADD_FAV","REMOVE_FAV","GET_CHARACTER_DETAIL","CLEAN_DETAIL","FILTER","ORDER","URL","addFav","character","dispatch","endpoint","data","post","type","payload","error","alert","removeFav","id","delete","getCharacterDetail","fetch","then","response","json","cleanDetail","filterCards","gender","orderCards","order"],"sources":["/Users/vickycorreas/Desktop/Programación/HENRY/HENRY Students/Proyecto-Integrador/rick_and_morty/Client/src/redux/actions.js"],"sourcesContent":["import axios from 'axios';\n\n\n//Creamos las action types\nexport const ADD_FAV = 'ADD_FAV';\nexport const REMOVE_FAV = 'REMOVE_FAV';\nexport const GET_CHARACTER_DETAIL = \"GET_CHARACTER_DETAIL\";\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\nexport const FILTER = \"FILTER\";\nexport const ORDER = \"ORDER\";\n\n//creamos las actions\n// export const addFav = (character) => {\n//   return {\n//     type: ADD_FAV,\n//     payload: character\n//   }\n// };\n\n//ADD FAV CON PROMESAS\n// export const addFav = async (character) => {\n//     const endpoint = 'http://localhost:3001/rickandmorty/fav';\n//     return (dispatch) => {\n//        axios.post(endpoint, character).then(({ data }) => {\n//           return dispatch({\n//              type: ADD_FAV,\n//              payload: data,\n//           });\n//        });\n//     };\n//  };\n\n//ADD FAV CON ASYNC AWAIT\nconst URL = \"http://localhost:3001/rickandmorty\";\n\n//! Con Express y funcion async/await\nexport const addFav = (character) => {\n  return async (dispatch) => {\n    const endpoint = `${URL}/fav`;\n    try {\n      const { data } = await axios.post(endpoint, character);\n      return dispatch({\n        type: ADD_FAV,\n        payload: data,\n      });\n    } catch (error) {\n      alert(error);\n    }\n  };\n};\n \n// export const removeFav = (id) => {\n//     return {\n//         type: REMOVE_FAV,\n//         payload: id\n//     }\n// };\n\n//REMOVE FAV CON PROMESAS\n// export const removeFav = (id) => {\n//     const endpoint = 'http://localhost:3001/rickandmorty/fav/' + id;\n//     return (dispatch) => {\n//        axios.delete(endpoint).then(({ data }) => {\n//           return dispatch({\n//              type: REMOVE_FAV,\n//              payload: data,\n//        });\n//        });\n//     };\n//  };\n\n//REMOVE FAV ASYNC AWAIT\nexport const removeFav = (id) => async (dispatch) => {\n    \n    try {\n        const endpoint = 'http://localhost:3001/rickandmorty/fav/' + id;\n        const { data } = await axios.delete(endpoint);\n        return dispatch({\n            type: REMOVE_FAV,\n            payload: data,\n      });\n    } catch (error) {\n        alert('Could not remove the character selected')\n      }\n };\n \nexport const getCharacterDetail = (id)=> { //Hacemos peticion asíncrona, retornamos una fx\n    return function (dispatch) {\n        fetch(`https://rickandmortyapi.com/api/character/${id}`)\n        .then((response) => response.json())\n        .then(data=>dispatch({type:GET_CHARACTER_DETAIL, payload:data}))\n    }\n};\n\nexport const cleanDetail = () => {\n    return {\n        type: CLEAN_DETAIL\n    }\n};\n\nexport const filterCards = (gender) => {\n    return {\n        type: FILTER,\n        payload: gender\n    }\n};\n\nexport const orderCards = (order) => {\n    return {\n        type: ORDER,\n        payload: order\n    }\n};\n \n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAGzB;AACA,OAAO,MAAMC,OAAO,GAAG,SAAS;AAChC,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,YAAY,GAAG,cAAc;AAC1C,OAAO,MAAMC,MAAM,GAAG,QAAQ;AAC9B,OAAO,MAAMC,KAAK,GAAG,OAAO;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMC,GAAG,GAAG,oCAAoC;;AAEhD;AACA,OAAO,MAAMC,MAAM,GAAIC,SAAS,IAAK;EACnC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,QAAQ,GAAI,GAAEJ,GAAI,MAAK;IAC7B,IAAI;MACF,MAAM;QAAEK;MAAK,CAAC,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAACF,QAAQ,EAAEF,SAAS,CAAC;MACtD,OAAOC,QAAQ,CAAC;QACdI,IAAI,EAAEb,OAAO;QACbc,OAAO,EAAEH;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,KAAK,CAACD,KAAK,CAAC;IACd;EACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,MAAME,SAAS,GAAIC,EAAE,IAAK,MAAOT,QAAQ,IAAK;EAEjD,IAAI;IACA,MAAMC,QAAQ,GAAG,yCAAyC,GAAGQ,EAAE;IAC/D,MAAM;MAAEP;IAAK,CAAC,GAAG,MAAMZ,KAAK,CAACoB,MAAM,CAACT,QAAQ,CAAC;IAC7C,OAAOD,QAAQ,CAAC;MACZI,IAAI,EAAEZ,UAAU;MAChBa,OAAO,EAAEH;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,KAAK,CAAC,yCAAyC,CAAC;EAClD;AACL,CAAC;AAEF,OAAO,MAAMI,kBAAkB,GAAIF,EAAE,IAAI;EAAE;EACvC,OAAO,UAAUT,QAAQ,EAAE;IACvBY,KAAK,CAAE,6CAA4CH,EAAG,EAAC,CAAC,CACvDI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAACX,IAAI,IAAEF,QAAQ,CAAC;MAACI,IAAI,EAACX,oBAAoB;MAAEY,OAAO,EAACH;IAAI,CAAC,CAAC,CAAC;EACpE,CAAC;AACL,CAAC;AAED,OAAO,MAAMc,WAAW,GAAGA,CAAA,KAAM;EAC7B,OAAO;IACHZ,IAAI,EAAEV;EACV,CAAC;AACL,CAAC;AAED,OAAO,MAAMuB,WAAW,GAAIC,MAAM,IAAK;EACnC,OAAO;IACHd,IAAI,EAAET,MAAM;IACZU,OAAO,EAAEa;EACb,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EACjC,OAAO;IACHhB,IAAI,EAAER,KAAK;IACXS,OAAO,EAAEe;EACb,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}