{"ast":null,"code":"import { ADD_FAV, CLEAN_DETAIL, FILTER, GET_CHARACTER_DETAIL, ORDER, REMOVE_FAV } from './actions';\nconst initialState = {\n  myFavorites: [],\n  characterDetail: {},\n  allCharacters: []\n};\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_FAV:\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allFavorites: action.payload\n      };\n\n    //! Antes de Express \n    // case ADD_FAV: \n    //   // const addFav = [...state.allFavorites, action.payload]; \n    //   return { \n    //     ...state, \n    //     myFavorites: [...state.allFavorites, action.payload], \n    //     allFavorites: [...state.allFavorites, action.payload], \n    //   }; \n\n    //! Con Express \n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allFavorites: action.payload\n      };\n\n    //! Antes de Express \n    // case REMOVE_FAV: \n    //   // const removeFav = state.myFavorites.filter((fav) => fav.id !== action.payload); \n    //   return { \n    //     ...state, \n    //     myFavorites: state.myFavorites.filter((fav) => fav.id !== Number(action.payload)), \n    //     allFavorites: state.myFavorites.filter((fav) => fav.id !== Number(action.payload)), \n    //   }; \n\n    case FILTER:\n      return {\n        ...state,\n        myFavorites: action.payload === \"All Favorites\" ? [...state.allFavorites] : state.allFavorites.filter(character => character.gender === action.payload)\n      };\n    case ORDER:\n      let ordered = [];\n      if (action.payload === \"Ascendente\") {\n        ordered = state.myFavorites.sort((a, b) => a.id > b.id ? 1 : -1);\n      } else {\n        ordered = state.myFavorites.sort((a, b) => b.id > a.id ? 1 : -1);\n      }\n      return {\n        ...state,\n        myFavorites: [...ordered]\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};","map":{"version":3,"names":["ADD_FAV","CLEAN_DETAIL","FILTER","GET_CHARACTER_DETAIL","ORDER","REMOVE_FAV","initialState","myFavorites","characterDetail","allCharacters","rootReducer","state","action","type","payload","allFavorites","filter","character","gender","ordered","sort","a","b","id"],"sources":["/Users/vickycorreas/Desktop/Programación/HENRY/HENRY Students/Proyecto-Integrador/rick_and_morty/Client/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAV, CLEAN_DETAIL, FILTER, GET_CHARACTER_DETAIL, ORDER, REMOVE_FAV } from './actions';\n\nconst initialState = {\n    myFavorites: [],\n    characterDetail: {},\n    allCharacters: []\n};\n\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) { \n    case ADD_FAV: \n      return { \n        ...state, \n        myFavorites: action.payload, \n        allFavorites: action.payload, \n      }; \n \n    //! Antes de Express \n    // case ADD_FAV: \n    //   // const addFav = [...state.allFavorites, action.payload]; \n    //   return { \n    //     ...state, \n    //     myFavorites: [...state.allFavorites, action.payload], \n    //     allFavorites: [...state.allFavorites, action.payload], \n    //   }; \n \n    //! Con Express \n    case REMOVE_FAV: \n      return { \n        ...state, \n        myFavorites: action.payload, \n        allFavorites: action.payload, \n      }; \n \n    //! Antes de Express \n    // case REMOVE_FAV: \n    //   // const removeFav = state.myFavorites.filter((fav) => fav.id !== action.payload); \n    //   return { \n    //     ...state, \n    //     myFavorites: state.myFavorites.filter((fav) => fav.id !== Number(action.payload)), \n    //     allFavorites: state.myFavorites.filter((fav) => fav.id !== Number(action.payload)), \n    //   }; \n \n    case FILTER: \n      return { \n        ...state, \n        myFavorites: action.payload === \"All Favorites\" ? [...state.allFavorites] : state.allFavorites.filter((character) => character.gender === action.payload), \n      }; \n \n    case ORDER: \n      let ordered = []; \n      if (action.payload === \"Ascendente\") { \n        ordered = state.myFavorites.sort((a, b) => (a.id > b.id ? 1 : -1)); \n      } else { \n        ordered = state.myFavorites.sort((a, b) => (b.id > a.id ? 1 : -1)); \n      } \n \n      return { \n        ...state, \n        myFavorites: [...ordered], \n      }; \n    default: \n      return { ...state }; \n  } \n};"],"mappings":"AAAA,SAASA,OAAO,EAAEC,YAAY,EAAEC,MAAM,EAAEC,oBAAoB,EAAEC,KAAK,EAAEC,UAAU,QAAQ,WAAW;AAElG,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,eAAe,EAAE,CAAC,CAAC;EACnBC,aAAa,EAAE;AACnB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EAC3D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKb,OAAO;MACV,OAAO;QACL,GAAGW,KAAK;QACRJ,WAAW,EAAEK,MAAM,CAACE,OAAO;QAC3BC,YAAY,EAAEH,MAAM,CAACE;MACvB,CAAC;;IAEH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA,KAAKT,UAAU;MACb,OAAO;QACL,GAAGM,KAAK;QACRJ,WAAW,EAAEK,MAAM,CAACE,OAAO;QAC3BC,YAAY,EAAEH,MAAM,CAACE;MACvB,CAAC;;IAEH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,KAAKZ,MAAM;MACT,OAAO;QACL,GAAGS,KAAK;QACRJ,WAAW,EAAEK,MAAM,CAACE,OAAO,KAAK,eAAe,GAAG,CAAC,GAAGH,KAAK,CAACI,YAAY,CAAC,GAAGJ,KAAK,CAACI,YAAY,CAACC,MAAM,CAAEC,SAAS,IAAKA,SAAS,CAACC,MAAM,KAAKN,MAAM,CAACE,OAAO;MAC1J,CAAC;IAEH,KAAKV,KAAK;MACR,IAAIe,OAAO,GAAG,EAAE;MAChB,IAAIP,MAAM,CAACE,OAAO,KAAK,YAAY,EAAE;QACnCK,OAAO,GAAGR,KAAK,CAACJ,WAAW,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;MACpE,CAAC,MAAM;QACLJ,OAAO,GAAGR,KAAK,CAACJ,WAAW,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMA,CAAC,CAACC,EAAE,GAAGF,CAAC,CAACE,EAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;MACpE;MAEA,OAAO;QACL,GAAGZ,KAAK;QACRJ,WAAW,EAAE,CAAC,GAAGY,OAAO;MAC1B,CAAC;IACH;MACE,OAAO;QAAE,GAAGR;MAAM,CAAC;EACvB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}